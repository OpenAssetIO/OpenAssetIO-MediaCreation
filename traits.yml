# yaml-language-server: $schema=https://raw.githubusercontent.com/OpenAssetIO/OpenAssetIO-TraitGen/main/python/openassetio_traitgen/schema.json
# yamllint disable-line rule:document-start
package: openassetio-mediacreation

description: Well-known Traits and Specifications for use in OpenAssetIO
  hosts and managers.

traits:
  timeline:
    description: Traits related to timelines.
    members:
      Timeline:
        description: >
          This trait characterizes a collection of tracks that evaluate
          concurrently to form layers of references to media. Frequently
          used in non-linear editing environments such as Video and
          Audio post production tools.
        usage:
          - entity
          - locale

      Track:
        description: >
          This trait characterizes a lane or collection of media,
          arranged temporally such that only a single item in the
          collection is active at any given time. Frequently used in
          non-linear editing environments such as Video and Audio post
          production tools.
        usage:
          - entity
          - locale

      Clip:
        description: >
          This trait characterizes the use of some range of external
          media, commonly on a track or timeline. Frequently used in
          non-linear editing environments such as Video and Audio
          production tools.


          TODO(TC) Define any additional properties, and companion
          traits such as 'frameRange' and 'handles'.
        usage:
          - entity
          - locale
        properties:
          name:
            type: string
            description: The name of the clip.

  content:
    description: Traits related to abstract content.
    members:
      LocatableContent:
        description: >
          This trait characterizes an entity whose data is persisted
          externally to the API through data accessible via a valid
          URL.


          The `location` property holds the most applicable location
          of the entity's content for the current process environment
          - considering platform, host, etc. Location is in the form
          of a URL.
        usage:
          - entity
        properties:
          location:
            type: string
            description: >
              The location of the entities external content.


              This must be a valid URL so special characters need to
              be encoded.
  identity:
    description: Traits that aid identification of an entity
    members:
      DisplayName:
        description: >
          Names that can be presented to a user in order to identify
          and/or disambiguate the entity. These strings are potentially
          unstable and should not be used as a UUID or other persistent
          anchor.
        usage:
          - entity
        properties:
          name:
            type: string
            description: |
              The humanized name of entity itself, not including any
              hierarchy or classification.

              For example:
              - `"Cuttlefish v1"` - for a version of an asset
              - `"seq003"` - for a sequence in a hierarchy

          qualifiedName:
            type: string
            description: |
              An unambiguous, humanised name for the entity.

              The display name may want to consider the host, and any other
              relevant Context information to form a display name for an
              entity that can uniquely identify the entity in that context.

              For example:
              - `"dive / build / cuttlefish / model / v1"` for a version
                  of an asset in an 'open recent' menu.
              - `"Sequence 003 [ Dive / Episode 1 ]"` for a sequence in
                 an hierarchy as a window title.


  managementPolicy:
    description: Traits used in a Manager's managementPolicy response.
    members:
      Managed:
        description: >
          A trait indicating that the data matching the supplied trait set
          is handled by the manager.


          There are three possible policies determined by
          applying/querying this trait:
          * If the response is not imbued with this trait, then the
            Manager has no interest in participating in the management of
            entities that match the queried trait set, for either read or
            write.
          * If the response is imbued with this trait, but the "exclusive"
            property is not set, or set to False, then the Manager would
              like the opportunity to manage the data, but the user should
              still be presented with standard Host UI for the type as an
              option.
            * If  the "exclusive" property is set to true, then the Manager
              takes exclusive control over data with the queried trait set,
              and any standard host interfaces etc should be suppressed.
        usage:
          - managementPolicy
        properties:
          exclusive:
            type: boolean
            description: >
              Determines if the manager exclusively handles data matching
              the supplied trait set.


              If True, then standard host contols should be disabled
              in favour of manager delegated UI. For example, file system
              browsers when determining where to load/save data.


              If False, then standard host controls can be presented in
              addition to any custom manager UI.

      ResolvesFutureEntities:
        description: >
          A trait indicating a manager can potentially resolve the
          supplied trait set for future entities.


          If not imbued, the manager is not capable of determining data
          in advance for new entities, and is only capable of resolving
          traits for exising ones.


          An example of this would be the ability to resolve a
          LocatableContentTrait in advance, to determine where new data
          should be written. When this trait imbued in the
          managementPolicy response, a host may attempt to resolve the
          locatableContent trait of a working entity reference supplied by
          preflight in order to determine a suitable output path before
          work is done. In its absence, a host must use alternate means to
          determine a suitable output location.
        usage:
          - managementPolicy
